package com.sisyphus;

import java.util.ArrayList;
import java.awt.Font;

import org.newdawn.slick.*;

public class Sisyphus extends BasicGame {
	
	private boolean fullScreen = false;
	private boolean musicOn = true;
	
	private static final String TITLE = "H.R.";
	private static final int WIDTH = 1280;
	private static final int HEIGHT = 600;
	private static AppGameContainer app;
	private static Sound BGM;
	private static Sound NewGameStart;
	private static Sound ButtonPress;
	
	
	
	private ArrayList<City> cities;
	private ArrayList<Mines> mines;
	
	private static Image mainMenu;
	private static Image sisyphus;
	private static Image optionsMenu;
	
	private int cumTime = 0;
	
	private Frames frame = Frames.MAIN;
	
	public Sisyphus() {
		super(TITLE);
	}
	
	public static void main(String [] args) throws SlickException {
		try {
			app = new AppGameContainer(new Sisyphus());
			app.setDisplayMode(WIDTH, HEIGHT, false);
			app.setShowFPS(false);
			app.start();
		} catch (SlickException e) {
			e.printStackTrace();
		}
	}

	// Make sound work again
	public void init(GameContainer gc) throws SlickException {
//		BGM = new Sound("res/Fortune.ogg");
//		BGM.loop();
		mainMenu = new Image("assets/MainMenu.jpg");
		sisyphus = new Image("assets/Sisyphus.jpg");
		optionsMenu = new Image("assets/OptionsMenu.jpg");
		
		cities = new ArrayList<City>();
		cities.add(new City("Armageddoville"));
		
		mines = new ArrayList<Mines>();
		mines.add(new Mines("First Mine", 100));
	}

	public void render(GameContainer gc, Graphics g) throws SlickException {		
		if(frame == Frames.MAIN){
			mainRender(gc, g);
		}
		if(frame == Frames.NEWGAME){
			newGameRender(gc, g);
		}
		if(frame == Frames.CREDITS){
			creditsRender(gc, g);
		}
		if(frame == Frames.OPTIONS){
			optionsRender(gc, g);
		}
	}

	public void update(GameContainer gc, int delta) throws SlickException {
		if (frame == Frames.NEWGAME) {
			/*cumTime += delta;
			if (cumTime >= 3000) {
				for (City city : cities) {
					city.upKeep(GlobalConstants.RATE);
					city.grow(GlobalConstants.RATE, GlobalConstants.MAX);
				}
			
				cumTime = 0;
			}*/
		}
		
		if(fullScreen == true){
			app.setDisplayMode(WIDTH, HEIGHT, true);
		} else {
			app.setDisplayMode(WIDTH, HEIGHT, false);
		}
		
		if(musicOn == true){
			if(frame == Frames.NEWGAME) {
				
			}else if(BGM.playing() == false){
				BGM.loop();
			}
		}else if (musicOn == false){
			BGM.stop();
		}
	}	
	
	public void mainRender(GameContainer gc, Graphics g){
		mainMenu.draw(0, 0, mainMenu.getWidth() * .6667f, mainMenu.getHeight() * .5555f);
/*		g.setColor(Color.white);
		g.drawLine(170, 80, 170, 395);
		g.drawLine(170, 110, WIDTH - 170, 110);
		g.drawLine(WIDTH - 170, 80, WIDTH - 170, 395);
		g.drawLine(0, 80, 170, 80);
		g.drawLine(0, 230, 170, 230);
		g.drawLine(0, 395, 170, 395);
		g.drawLine(WIDTH, 80, WIDTH - 170, 80);
		g.drawLine(WIDTH, 230, WIDTH - 170, 230);
		g.drawLine(WIDTH, 395, WIDTH - 170, 395);
*/
	}
	
	public void newGameRender(GameContainer gc, Graphics g) {
		g.setColor(Color.black);
		g.fillRect(0, 0, WIDTH, HEIGHT);
		
		g.setColor(Color.white);
		
		sisyphus.draw(0, 0, sisyphus.getWidth() * .6667f, mainMenu.getHeight() * 0.5555f);
		
		for (City index : cities) {
			g.drawString(index.getName() + " has a pop of " + index.getLocalPop(), 10, 10);
			g.drawString("and " + index.getLocalRes() + " resources", 10, 25);
		}		
	}
	
	public void creditsRender(GameContainer gc,Graphics g) {
		mainMenu.draw(0, 0, mainMenu.getWidth() * .6667f, mainMenu.getHeight() * .5555f);
		g.setColor(Color.black);
		g.fillRect(0, 0, WIDTH, HEIGHT);
	}
	
	public void optionsRender(GameContainer gc,Graphics g) {
		optionsMenu.draw(0, 0, optionsMenu.getWidth() * .6667f, optionsMenu.getHeight() * .5555f);
/*		g.setColor(Color.white);
		g.drawLine(170, 80, 170, 395);
		g.drawLine(170, 110, WIDTH - 170, 110);
		g.drawLine(WIDTH - 170, 80, WIDTH - 170, 395);
		g.drawLine(0, 80, 170, 80);
		g.drawLine(0, 230, 170, 230);
		g.drawLine(0, 395, 170, 395);
		g.drawLine(WIDTH, 80, WIDTH - 170, 80);
		g.drawLine(WIDTH, 230, WIDTH - 170, 230);
		g.drawLine(WIDTH, 395, WIDTH - 170, 395);
*/
	}
	
	public void mouseClicked(int button, int x, int y, int clickCount) {
		//	New Game
		if (frame == Frames.MAIN) {
			if(x <= 540 && x >= 280 && y <= 560 && y >= 425) {
				frame = Frames.NEWGAME;
				BGM.stop();
				NewGameStart.play();
			} else if (x <= 1015 && x >= 730 && y <= 560 && y >= 425) {
				frame = Frames.GAME;
			} else if (x <= 420 && x >= 220 && y <= 300 && y >= 260) {
				frame = Frames.OPTIONS;
			} else if (x <= 1115 && x >= 855 && y <= 300 && y >= 260) {
				frame = Frames.CREDITS;
			}	
		} else if (frame == Frames.OPTIONS) {
			if(x >= 230 && x <= 300 && y >= 255 && y <= 295){
				musicOn = true;
				ButtonPress.play();
			}else if(x >= 350 && x <= 430 && y >= 250 && y <= 300){
				musicOn = false;
				ButtonPress.play();
			}else if(x >= 870 && x <= 1050 && y >= 200 && y <= 300){
				ButtonPress.play();
				if(fullScreen == true){
					fullScreen = false;
				} else {
					fullScreen = true;
				}
			}
		
		} else if (frame == Frames.NEWGAME) {
		} else if (frame == Frames.CREDITS) {
		}
	}
	
	public void keyPressed(int key, char c) {
		if (key == Input.KEY_ESCAPE) {
			app.exit();
		}
		if(frame == Frames.OPTIONS||frame == Frames.CREDITS){
			if (key == Input.KEY_BACK) {
				frame = Frames.MAIN;
				ButtonPress.play();
			}
		}
	}
}
