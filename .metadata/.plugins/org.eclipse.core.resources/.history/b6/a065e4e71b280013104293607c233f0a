package com.sisyphus;

import org.newdawn.slick.*;

public class Sisyphus extends BasicGame {
	
	private boolean fullScreen = false;
	private boolean musicOn = false;
	
	private static final String TITLE = "Sisyphus";
	private static final int WIDTH = 1280;
	private static final int HEIGHT = 600;
	private static AppGameContainer app;
	private static Sound BGM;
	private static Image mainMenu;
	private Frames frame = Frames.MAIN;
	
	public Sisyphus() {
		super(TITLE);
	}
	
	public static void main(String [] args) throws SlickException {
		try {
			app = new AppGameContainer(new Sisyphus());
			app.setDisplayMode(WIDTH, HEIGHT, false);
			app.setShowFPS(false);
			app.start();
		} catch (SlickException e) {
			e.printStackTrace();
		}
	}

	public void init(GameContainer gc) throws SlickException {
//		BGM = new Sound("res/Fortune.ogg");
//		BGM.loop();
		mainMenu = new Image("assets/MainMenu.jpg");
	}

	public void render(GameContainer gc, Graphics g) throws SlickException {
		
		if(frame == Frames.MAIN){
			mainRender(gc,g);
		}
		if(frame == Frames.NEWGAME){
			newGameRender(gc,g);
		}
		if(frame == Frames.CREDITS){
			creditsRender(gc,g);
		}
		if(frame == Frames.OPTIONS){
			optionsRender(gc,g);
		}
	}

	public void update(GameContainer gc, int delta) throws SlickException {
		if(frame == Frames.MAIN) {
			updateMain(gc,delta);
		}
		if(frame == Frames.NEWGAME) {
			updateNewGame(gc,delta);
		}
		if(frame == Frames.CREDITS) {
			updateCredits(gc,delta);
		}
		if(frame == Frames.OPTIONS) {
			updateOptions(gc,delta);
		}
	}
	
	private void updateNewGame(GameContainer gc, int delta) {
		
	}

	private void updateMain(GameContainer gc, int delta) {
		
	}

	private void updateCredits(GameContainer gc, int delta) {
		
	}

	private void updateOptions(GameContainer gc, int delta) {
		
	}

	public void keyPressed(int key, char c) {
		if (key == Input.KEY_ESCAPE) {
			app.exit();
		}
	}
	public void mainRender(GameContainer gc, Graphics g){
		mainMenu.draw(0, 0, mainMenu.getWidth() * .6667f, mainMenu.getHeight() * .5555f);
		g.setColor(Color.white);
		g.drawLine(170, 80, 170, 395);
		g.drawLine(170, 110, WIDTH - 170, 110);
		g.drawLine(WIDTH - 170, 80, WIDTH - 170, 395);
		g.drawLine(0, 80, 170, 80);
		g.drawLine(0, 230, 170, 230);
		g.drawLine(0, 395, 170, 395);
		g.drawLine(WIDTH, 80, WIDTH - 170, 80);
		g.drawLine(WIDTH, 230, WIDTH - 170, 230);
		g.drawLine(WIDTH, 395, WIDTH - 170, 395);
	}
	public void newGameRender(GameContainer gc,Graphics g){
		mainMenu.draw(0, 0, mainMenu.getWidth() * .6667f, mainMenu.getHeight() * .5555f);
		g.setColor(Color.black);
		g.fillRect(0, 0, WIDTH, HEIGHT);
	}
	public void creditsRender(GameContainer gc,Graphics g){
		mainMenu.draw(0, 0, mainMenu.getWidth() * .6667f, mainMenu.getHeight() * .5555f);
		g.setColor(Color.black);
		g.fillRect(0, 0, WIDTH, HEIGHT);
		
	}
	public void optionsRender(GameContainer gc,Graphics g){
		mainMenu.draw(0, 0, mainMenu.getWidth() * .6667f, mainMenu.getHeight() * .5555f);
		g.setColor(Color.white);
		g.drawLine(170, 80, 170, 395);
		g.drawLine(170, 110, WIDTH - 170, 110);
		g.drawLine(WIDTH - 170, 80, WIDTH - 170, 395);
		g.drawLine(0, 80, 170, 80);
		g.drawLine(0, 230, 170, 230);
		g.drawLine(0, 395, 170, 395);
		g.drawLine(WIDTH, 80, WIDTH - 170, 80);
		g.drawLine(WIDTH, 230, WIDTH - 170, 230);
		g.drawLine(WIDTH, 395, WIDTH - 170, 395);
	}
}
